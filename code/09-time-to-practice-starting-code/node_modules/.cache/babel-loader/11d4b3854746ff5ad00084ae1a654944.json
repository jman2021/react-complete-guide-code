{"ast":null,"code":"var _jsxFileName = \"/Users/jackmanthorp/Desktop/React/course/react-complete-guide-code/code/09-time-to-practice-starting-code/src/pages/QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useRouteMatch } from \"react-router\";\nimport { Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetails = () => {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  console.log(match);\n  const quoteId = params.QuoteId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Quote \", quoteId, \" details here!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `GreatQuotes/${params.QuoteId}/comments`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'black'\n          },\n          children: \"comments section here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetails, \"Z/bFVfTt127x9UIB6x9JiYH3soU=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["/Users/jackmanthorp/Desktop/React/course/react-complete-guide-code/code/09-time-to-practice-starting-code/src/pages/QuoteDetails.js"],"names":["useParams","useRouteMatch","Route","QuoteDetails","params","match","console","log","quoteId","QuoteId","color"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAyC,cAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,KAAK,GAAGJ,aAAa,EAA3B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,OAAO,GAAGJ,MAAM,CAACK,OAAvB;AAEA,sBACI;AAAA,4BACI;AAAA,2BAAUD,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,eAAcJ,MAAM,CAACK,OAAQ,WAA3C;AAAuD,MAAA,KAAK,MAA5D;AAAA,6BACI;AAAA,+BACI;AAAG,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC;AAAP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAnBD;;GAAMP,Y;UACaH,S,EACDC,a;;;KAFZE,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import { useParams, useRouteMatch } from \"react-router\"\nimport { Route } from \"react-router-dom\"\n\nconst QuoteDetails = () => {\n    const params = useParams()\n    const match = useRouteMatch()\n    console.log(match)\n    \n    const quoteId = params.QuoteId\n\n    return (\n        <div>\n            <p>Quote {quoteId} details here!</p>\n            <Route path={`GreatQuotes/${params.QuoteId}/comments`} exact>\n                <div>\n                    <p style={{color:'black'}}>comments section here</p>\n                </div>\n\n            </Route>\n        </div>\n    )\n\n}\n\nexport default QuoteDetails"]},"metadata":{},"sourceType":"module"}
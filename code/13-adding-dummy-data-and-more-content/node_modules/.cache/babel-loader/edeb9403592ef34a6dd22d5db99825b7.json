{"ast":null,"code":"var _jsxFileName = \"/Users/jackmanthorp/Desktop/React/course/react-complete-guide-code/code/13-adding-dummy-data-and-more-content/src/components/quotes/QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory(); //const match = useRouteMatch()\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const isAsc = searchParams.get('sort') === 'asc';\n\n  const sortHandler = () => {\n    const sortDirection = isAsc ? 'desc' : 'asc';\n    history.push(`${location.pathname}?sort=${sortDirection}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sortHandler(),\n      children: [\"Sort \", isAsc ? 'Descending' : 'Ascending']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["/Users/jackmanthorp/Desktop/React/course/react-complete-guide-code/code/13-adding-dummy-data-and-more-content/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","useRouteMatch","QuoteItem","classes","QuoteList","props","history","location","searchParams","URLSearchParams","search","isAsc","get","sortHandler","sortDirection","push","pathname","list","quotes","map","quote","id","author","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,QAAuD,cAAvD;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAMC,OAAO,GAAGP,UAAU,EAA1B,CAF2B,CAG3B;;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,YAAY,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAArB;AAEA,QAAMC,KAAK,GAAGH,YAAY,CAACI,GAAb,CAAiB,MAAjB,MAA6B,KAA3C;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,aAAa,GAAGH,KAAK,GAAG,MAAH,GAAY,KAAvC;AAEAL,IAAAA,OAAO,CAACS,IAAR,CAAc,GAAER,QAAQ,CAACS,QAAS,SAAQF,aAAc,EAAxD;AACD,GAJD;;AAMA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMD,WAAW,EAAlC;AAAA,0BAA4CF,KAAK,GAAG,YAAH,GAAkB,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAER,OAAO,CAACc,IAAvB;AAAA,gBACGZ,KAAK,CAACa,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,QAAA,MAAM,EAAED,KAAK,CAACE,MAHhB;AAIE,QAAA,IAAI,EAAEF,KAAK,CAACG;AAJd,SACOH,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/BD;;GAAMjB,S;UAEYL,U,EAECC,W;;;KAJbI,S;AAiCN,eAAeA,SAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n\n  const history = useHistory()\n  //const match = useRouteMatch()\n  const location = useLocation()\n\n  const searchParams = new URLSearchParams(location.search)\n\n  const isAsc = searchParams.get('sort') === 'asc'\n\n  const sortHandler = () => {\n    const sortDirection = isAsc ? 'desc' : 'asc'\n\n    history.push(`${location.pathname}?sort=${sortDirection}`)\n  }\n\n  return (\n    <Fragment>\n      <button onClick={() => sortHandler()}>Sort {isAsc ? 'Descending' : 'Ascending'}</button>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}